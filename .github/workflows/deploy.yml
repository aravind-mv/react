name: Deploy React App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build React app
        run: npm run build

      - name: Build Docker image
        run: docker build -t my-react-app .

      - name: Save Docker image as artifact
        run: docker save my-react-app -o docker-image.tar

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: /home/azuser/docker-image.tar

      - name: Download Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image

      - name: Load Docker image
        run: docker load -i docker-image.tar

      - name: Deploy to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          # Write SSH private key to file
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/ssh_key
          chmod 600 ~/ssh_key

          # SSH to server and deploy
          ssh -i ~/ssh_key -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} '
            # Ensure Docker is running
            sudo systemctl start docker || true

            # Verify Docker image
            echo "Docker images:"
            docker images

            # Stop and remove existing container if it exists
            if [ "$(docker ps -q -f name=my-react-container)" ]; then
              echo "Stopping and removing existing container..."
              docker stop my-react-container
              docker rm my-react-container
            fi

            # Run new Docker container
            echo "Running new Docker container..."
            docker run -d --name my-react-container -p 80:80 my-react-app || { echo "Failed to run container"; exit 1; }

            # Check container logs
            echo "Container logs:"
            docker logs my-react-container
          '
